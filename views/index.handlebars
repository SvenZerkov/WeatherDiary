{{> header}}

<div class="container">


  <h1>Weather Diary</h1>

  {{#if desc}}
  <p>{{desc}}</p>
  <button onclick="showChosenDay()">View</button>
  <p>
  <form action="/api/notes/" method="post">
    <label for="date">Choose date: </label><br>
    <input type="date" id="date" name="date">
    </p>
    {{else}}
    <p>No content</p>
    {{/if}}

    <div class="row">
      <div class="col-sm-6">
        <h3>Weather history</h3>
        <p class="datevalue"></p>
        <table class="table table-bordered">
          <thead>
            <tr>
              <th>Date</th>
              <th>Temperature</th>
            </tr>

          </thead>
          <tbody>
            <tr>
              <td>date</td>
              <td>Tähän dataa open-meteosta &#8451;</td>
            </tr>
          </tbody>
        </table>
      </div>
        </thead>
        <tbody>
       <tbody>
          <tr>
          <td>Temperature:</td>
          <td>{{weatherDetails}}</td></tr>
          <tr><td>Sunrise: </td>
          <td>{{this.sunrise}}</td></tr>
          <tr><td>Sunset: </td>
          <td>{{weatherDetails.sunset}}</td></tr>
          <tr><td>Precipitation: </td>
          <td>{{this.precipitation}}</td></tr>
          <tr><td>Windspeed: </td>
          <td>{{this.windspeed}}</td></tr>
        </tbody>
      </table>
    </div>

      <div class="col-sm-6">
        <h3>Personal entries</h3>
        <p class="datevalue"></p>
        <table id="scrollbar-table" class="table table-bordered">
          <thead id="scrollbar-thead">
            <tr>
              <th>Date</th>
              <th>Temperature</th>
              <th>Comments</th>
              <th></th>
            </tr>
          </thead>
          <tbody id="scrollbar-tbody">
            {{#each UserNotes}}
            <tr>
              <td>{{this.date}}</td>
              <td>{{this.temperature}} &#8451;</td>
              <td>{{this.comment}}</td>

              <td><input type="button" class="btn btn-primary" aria-label="Update current note" id="updateNoteButton"
                  value="Update"><br><br>
                <input type="button" class="btn btn-danger" aria-label="Delete current note" id="deleteNoteButton"
                  value="Delete">
              </td>
            </tr>
            {{/each}}
          </tbody>
        </table>
      </div>
    </div>
    <div class="col-sm-4"></div>
    <div class="col-sm-12 personaldiaryentry">
      <h3>Personal diary entries</h3>

      <table class="table table-bordered">
        <thead>
          <tr>
            <th>Date</th>
            <th><label for="temperature">Temperature</label></th>
            <th><label for="comment">Comments</label></th>
          </tr>
        </thead>
        <tbody>
          <tr>
            {{!-- <td><input type="date" id="date" name="date"></td> --}}
            <td>
              <p class="datevalue"></p>
            </td>
            <td>
              <input type="number" id="temperature" name="temperature" value="" min="-80" max="50" step="0.1">
            </td>
            {{!-- <span id="temperature-between" class="invalid-temperature">between -80 and 50.</span> --}}
            <td>
              <input type="text" id="comment" name="comment" value="" maxlength="200">
              <span id="comment-validation-max-character-amount" class="invalid-amount">Maximum amount of characters is
                200.</span>
            </td>
          </tr>
        </tbody>
      </table>
      <input type="submit" value="Submit">
  </form>
</div>

{{!-- delete modal --}}
<div id="confirm-delete" class="modal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Confirm delete</h4>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
      </div>
      <div class="modal-body">
        <p class="message"></p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-danger yes-delete">Yes</button>
        <button type="button" class="btn btn-default no-delete" data-dismiss="modal">No</button>
      </div>
    </div>
  </div>
</div>

{{!-- update modal --}}
<div id="confirm-update" class="modal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Confirm update</h4>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
      </div>
      <div class="modal-body">
        <p class="message"></p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-danger yes-update">Yes</button>
        <button type="button" class="btn btn-default no-update" data-dismiss="modal">No</button>
      </div>
    </div>
  </div>
</div>

{{!-- script for event listener on deleteButton --}}
<script>
  // dev section jquery test
  if (typeof jQuery == 'undefined') {
    console.log('jQuery is not loaded');
  } else {
    console.log('jQuery is loaded');
  };

  const deleteConfirm = (msg) => {
    return new Promise((resolve, reject) => {
      const confirmBox = $("#confirm-delete");
      confirmBox.find(".message").text(msg);
      confirmBox.find(".yes-delete").click(() => {
        confirmBox.hide();
        resolve();
      });
      confirmBox.find(".no-delete").click(() => {
        confirmBox.hide();
        reject();
      });
      confirmBox.find(".close").click(() => {
        confirmBox.hide();
        reject();
      });
      confirmBox.show();
    });
  };


  const deleteNote = () => {
    console.log("Note deleted.");
    // send req to server to handle the delete after ideing correct note
  };

  const deleteButton = document.getElementById("deleteNoteButton");

  deleteButton.addEventListener("click", () => {
    deleteConfirm("Do you want to delete the current note?")
      .then(deleteNote)
      .catch((error) => {
        if (error) {
          console.error(error);
        } else {
          console.log("Deletion canceled.");
        }
      });
  });
</script>

{{!-- script for event listener on update button --}}
<script>
  const updateConfirm = (msg) => {
    return new Promise((resolve, reject) => {
      const confirmBox = $("#confirm-update");
      confirmBox.find(".message").text.(msg);
      confirmBox.find(".yes-update").click(() => {
        confirmBox.hide();
        resolve();
      });
      confirmBox.find(".no-update").click(() => {
        confirmBox.hide();
        reject();
      });
      confirmBox.show();
    });
  };

  const updateNote = () => {
    console.log("note updated");
    // send req to server for updating note
  };

  const updateButton = document.getElementById("updateNoteButton");

  updateButton.addEventListener("click", () => {
    console.log("Update button clicked.");
    /*
    updateConfirm("Do you want to update the current note?")
      .then(updateNote)
      .catch((error) => {
        if (error) {
          console.log(error);
        } else {
          console.log("Update canceled.")
        }

      });
      */
  });

</script>

{{!-- Script for showing chosen day in html --}}
<script>
  function showChosenDay() {
    let MyDate = document.getElementById("date").value;
    //console.log(MyDate);

    // slicing the date, to show in right format
    let year = String(MyDate).slice(0, 4);
    //console.log(year);

    let month = String(MyDate).slice(5, 7);
    //console.log(month);

    let day = String(MyDate).slice(8, 10);
    //console.log(day);

    let formatDate = day + "." + month + "." + year;
    //console.log(formatDate);

    const collection = document.getElementsByClassName("datevalue");
    collection[0].innerHTML = formatDate;
    collection[1].innerHTML = formatDate;
    collection[2].innerHTML = formatDate;
  }

</script>


{{!-- Temperature-kentän validointi - Lämpötilan on oltava -80 ja 50 välillä. --}}
<script>
  const form = document.querySelector('form');
  const temperatureInput = document.getElementById('temperature');
  const temperatureFalse = document.getElementById('temperature-false');

  form.addEventListener('submit', (event) => {
    if (!temperatureInput.checkValidity()) {
      temperatureFalse.style.display = 'block';
      event.preventDefault();
    } else {
      temperatureFalse.style.display = 'none';
    }
  });
</script>

{{!-- Päivämäärän maksimiarvon asettaminen sivun lataamispäivään --}}
<script>
  const currentDate = new Date().toISOString().split("T")[0];
  document.getElementById("date").setAttribute("max", currentDate);
</script>


</div>